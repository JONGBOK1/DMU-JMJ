-- (인공) 데이터베이스(담당: 김희숙) 9주차 (수업중제출) (stu)

-- (MySQL) safe mode 해제
SET SQL_SAFE_UPDATES = 0;

-- 테이블 구조 확인
DESC 테이블명;

use 9weekdb;

-- [실습 1-01] (DML/참조 무결성 제약조건)

/* --- 부서, 사원 스키마 ------------------------ */
-- 부서(부서번호 pk, 부서이름)
-- 사원(사원번호 pk, 사원이름, 소속부서 fk)

drop table if exists 사원;
drop table if exists 부서;

CREATE TABLE 부서 (
    부서번호  INT            NOT NULL ,
    부서이름  VARCHAR(10)   ,
    PRIMARY KEY (부서번호)
);

CREATE TABLE 사원 (
    사원번호  INT            NOT NULL ,
    사원이름  VARCHAR(10)   , 
    소속부서  INT  , 
    PRIMARY KEY (사원번호) ,   
    FOREIGN KEY (소속부서)
        REFERENCES 부서(부서번호)
);

-- 부서(부서번호 pk, 부서이름)
-- 사원(사원번호 pk, 사원이름, 소속부서 fk)
insert into 부서 values(1,'인사부');
insert into 부서 values(2,'연구부');
insert into 부서 values(3,'홍보부');

insert into 사원 values(1001,'홍길동',3);
insert into 사원 values(1002,'임꺽정',1);
insert into 사원 values(1003,'차명석',1);

select * from 부서;
select * from 사원;
/* --------------------------------------------- */

--------------------------------------------------
-- [실습 1-02] (테이블 2개) (부서, 사원)

-- 부서(부서번호 pk, 부서이름)
-- 사원(사원번호 pk, 사원이름, 소속부서 fk)

-- 다음은 실행가능한가?

-- 1) 부서번호 3인 홍보부를 삭제하라
delete
from 	부서
where	부서번호 = 3;

-- 2) 임꺽정 소속부서를 5로 수정하라
update  사원
set		소속부서 = 5
where	사원이름 = '임꺽정';

-- 3) 부서번호 1을 부서번호 9로 수정하라
update	부서
set		부서번호 = 9
where	부서번호 = 1;

-- 4) 부서 테이블에 새로운 레코드를 입력하라
insert into 부서 values( 4, '영업부');
select * from 부서;

-- 5) 사원 테이블에서 차명석을 삭제하라
delete
from	사원
where	사원이름 = '차명석';
select * from 사원;

--------------------------------------------------
-- [실습 2-01] (테이블 2개) (부서, 사원) (cascade)

-- 홍보부를 삭제하라는 실행가능한가?
-- 1) on delete no action 
-- 2) on delete cascade
-- 3) on delete set null

-- 부서번호 3인 홍보부를 삭제하라
DELETE
FROM   부서
WHERE  부서번호 = 3;

select * from 부서;
--------------------------------------------------
-- [실습 2-02]  (테이블 2개) (부서, 사원) (set null)
drop table 사원;
drop table 부서;

CREATE TABLE 부서 (
    부서번호  INT            NOT NULL ,
    부서이름  VARCHAR(10)   ,
    PRIMARY KEY (부서번호)
);

CREATE TABLE 사원 (
    사원번호  INT            NOT NULL ,
    사원이름  VARCHAR(10)   , 
    소속부서  INT  , 
    PRIMARY KEY (사원번호) ,   
    FOREIGN KEY (소속부서)
        REFERENCES 부서(부서번호)
		on delete set null
);

-- 홍보부를 삭제하라는 실행가능한가?
-- 1) on delete no action 
delete
from 	부서
where	부서번호 = 3;

-- 1) on delete no action 
select * from 부서;

-- 2) on delete cascade
delete
from 	부서
where	부서번호 = 3;

-- 3) on delete set null
delete
from 	부서
where	부서번호 = 3;

select * from 부서;
--------------------------------------------------

-- [실습] 예제3-1] 고객 (무결성 제약조건 없는 경우) (stu)

-- 다음 조건을 만족하는 데이터정의어를 작성하시오
-- (조건)
-- 1) 고객아이디 속성이 기본키다
-- 2) 고객이름과 등급 속성은 값을 반드시 입력해야 한다.
-- 3) 적립금 속성은 값을 입력하지 않으면 0이 기본으로 입력된다

-- 1) 제약조건 없는 경우
drop table 고객;

CREATE TABLE 고객 (
      고객아이디   	 VARCHAR(20)   ,
      고객이름    	 VARCHAR(10) 	not null ,
      나이   	     INT                 ,   
      등급   		 VARCHAR(10)  	not null ,
      직업		 VARCHAR(20)   ,
      적립금       INT	 		default 0 ,
      PRIMARY KEY( 고객아이디 )
);

-- 테이블 구조 확인
DESC 고객;

-----------------------
-- [실습] 예제3-2] 제품 (무결성 제약조건 있는 경우)

-- 다음 조건을 만족하는 데이터정의어를 작성하시오
-- (조건)
-- 1) 제품번호 속성이 기본키다
-- 2) 재고량이 항상 0개 이상 10,000 이하를 유지한다

-- 제품(제품번호, 제품명, 재고량, 단가, 제조업체)

-- 1) 제약조건 있는 경우
drop table 제품;

CREATE TABLE 제품 (
      제품번호    CHAR(3) ,
      제품명      VARCHAR(20) ,
      재고량      INT ,
      단가        INT ,
      제조업체    VARCHAR(20) ,
      PRIMARY KEY( 제품번호 ) ,
      CHECK( 재고량 >=0 and 재고량<= 10000 )
);

-- 테이블 구조 확인
DESC 제품;

-----------------------
-- [실습] 예제3-3] 주문 (무결성 제약조건 있는 경우)

-- 다음 조건을 만족하는 데이터정의어를 작성하시오
-- (조건)
-- 1) 주문번호 속성이 기본키다
-- 2) 주문고객 속성이 고객 테이블의 고객아이디를 참조하는 외래키이다
-- 3) 주문제품 속성이 제품 테이블의 제품번호 속성을 참조하는 외래키이다

-- 주문(주문번호, 주문고객, 주문제품, 수량, 배송지, 주문일자)
drop table 주문;

-- 1) 제약조건 있는 경우

CREATE TABLE 주문 (
       주문번호    CHAR(3)	NOT NULL,
       주문고객    VARCHAR(20),
       주문제품    CHAR(3),
       수량          INT,
       배송지      VARCHAR(30),
       주문일자    DATE,
		PRIMARY KEY(주문번호),
        FOREIGN KEY(주문고객) references 고객(고객아이디) ,
        FOREIGN KEY(주문제품) references 제품(제품번호)
);

-- 테이블 구조 확인
DESC 주문;
select * from 주문;
-----------------------

--------------------------------------------------
